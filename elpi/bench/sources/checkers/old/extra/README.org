* Introduction
  Each file should be enough commented, this is just to have all info in one place
  so as to make things easier to read if people are busy.

* LKF files
** certificatesLKF
   Only a signature. Inside : Bureau's types for LKF ([agentName]^K)
** lkf-syntax
   Note : type form common between LJF and LKF
** lkf-kekrnel
   Non-multi anything. Paper Fidelity (PaFi).

* LJF files
** certificatesLJF
   Only a signature. Inside : Bureau's types for LJF ([agentName]^J)
** ljf-syntax
   Note : type form common between LJF and LKF
** ljf-kekrnel
   Non-multi anything. Paper Fidelity (PaFi).
   
* LKF in LJF files
** imbed   < 100 lines
   imbedForm+ (resp. -) is the positive (resp negative) translation of Kaus. 
** Bureau  
   For now, agents ignore the formulas. Pendant discussion on what is the
   interface of an agent. If chose to add the formula, the call to the LKF agent 
   should also reverse the translation of formula
   
   reminder:
   >           LKF                      LJF
   >          decide		    DecideLeft
             			    NO (decideRight)
             			    
    >                               ReleaseLeft is always on false. 			    
    >        Release                 ReleaseRight 
            
    >        store		    storeLeft
            			    storeRight		
            			    
    >        			    NO (initialLeft)
    >        initial 		   InitialRight
            
    >        All		 Some Clerk          
    >        Some		 Some Expert
    >        andPos		 andPos Expert
    >        OrNeg		 andPos Clerk
    >        andNeg		 or Clerk
    >        orPos 		 or Expert
            			
    >       			Arrow Expert
    >        			Arrow Clerk	
            			
    >       truePos		True Exp
    >       falseNeg            TrueClerk
            			    	    
    >       Cut 		Cut (but with a little special treatment) 			    
             			      

* FPCs
** Resolution
*** binaryResolution
    accum "imbed"
    Same agent as in the paper (nearly same code as Dale's)
    Some examples of Dale including FO.
    CALL : 
    
    tjsim binaryResolution
    [binaryResolution] ?- testAllResImbed.
          will test all activated examples (the first parameter of the predicate 
          "example" is an int that is set to 0 or 1, for non activated and 
          activated) using the EMBEDDING
    [binaryResolution] ?-testAllRes.
          Will test the example using normal LKF kernel.     
*** 
** STLC
*** Syntax
    -For now : Only Debruijn β-η-long HEAD normal forms ommitting the starting λs.
    -A counter starts at zero to provide the indexes and retrieve the types accordingly.
    -Since no λ, no need to δ⁺ all right subforms of the type (Zak-Dale talk of sept 29th)
     to correspond to the λ_s
    - Later, one can change ltype to bool or whatever type one wants.
*** Certificate
    - lcert Counter Term 
*** Bureau
    - No cut, and, or, quantifiers, units
    - Only arrow and structure.
    - No decide Right (only negative atms) 
    - No release Left : only negative things.
    - No initial Right : only negative atms.

* rev directory
  Contains the kernels but with a clerk predicate that does not take a formula
  as an argument.
