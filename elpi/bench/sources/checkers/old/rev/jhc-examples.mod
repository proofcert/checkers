module jhc-examples.
accumulate control.
accumulate ljf-formulas, iforms, ljf-polarize.
accumulate ljf-kernel.
accumulate jhc-fpc.

test N :- example N Theorem Tlabs Justs, polarize+ Theorem Form,
          ljf_entry (load Tlabs Justs) Form.

test_all :- 
   example X Theorem Tlabs Justs, polarize+ Theorem Form,
   (sigma Str\ term_to_string X Str, print Str, print " "),
   if (ljf_entry (load Tlabs Justs) Form)
      (print "Success\n") 
      (print "Fail\n"), 
  fail.

% example Num  Theorem   TheoryLabels  Justifications
% Justifications have four parts:
%  - label
%  - atomic conclusion
%  - inference rule label
%  - list of premise labels
%  - atomic formula A: The theorem to prove is [Theory => A]

example 1 
  ((adj a b) imp
   (adj b a) imp
   (forall x\forall y\ (adj x y) imp (path x y)) imp
   (forall x\forall y\forall z\ (path x y) imp (path y z) imp (path x z)) imp
   (path a a))
  [ab, ba, inc, tran] 
  [
   tup pab (path a b) inc [ab],
   tup pba (path b a) inc [ba],
   tup paa (path a a) tran [pab,pba]
  ].

example 2 
  ((adj a b) imp
   (adj b a) imp
   (adj b c) imp
   (adj c d) imp
   (forall x\forall y\ (adj x y) imp (path x y)) imp
   (forall x\forall y\forall z\ (path x y) imp (path y z) imp (path x z)) imp
   (path a d))
  [ab, ba, bc, cd, inc, tran] 
  [
   tup pab (path a b) inc [ab],
   tup pba (path b a) inc [ba],
   tup pbc (path b c) inc [bc],
   tup pcd (path c d) inc [cd],
   tup paa (path a a) tran [pab,pba],
   tup pac (path a c) tran [pab,pbc],
   tup pad (path a d) tran [pac,pcd]
  ].

example 3 % Simple modal logic example
    ((forall X\ forall Y\ pv (X ar (Y ar X))) imp
    ((forall X\ forall Y\ forall Z\ pv ((X ar (Y ar Z)) ar ((X ar Y) ar (X ar Z)))) imp
    ((forall X\ pv (((X ar bot) ar bot) ar X)) imp
    ((forall X\ forall Y\ (pv X) imp (pv (X ar Y)) imp (pv Y)) imp
    ((forall X\ (pv X) imp (pv (box X))) imp
    ((forall X\ (pv (box X ar X))) imp
    ((forall X\ (pv (box X ar (box (box X))))) imp
         pv (((v ar w) ar v) ar v))))))))
    [aa, bb, cc, mp, gg, tax, s4]
[
].


% Taken (via cut-and-paste) from a pdf version of the paper
% Proofs Without Syntax
% DOMINIC J. D. HUGHES

% Below is a proof of Peirce’s law ((p ⇒ q)⇒ p)⇒ p in a standard
% Frege-Hilbert formulation of propositional logic, taught to mathematics
% undergraduates [Joh87], with axiom schemata

% (a) x arr (y arr x)
% (b) (x arr (y arr z)) arr ((x arr y) arr (x arr z))
% (c) ((x arr f) arr f) arr x
% 
% and where (m i j) marks modus ponens with hypotheses numbered
% i and j. Hilbert systems tend to emphasise the elegance of the
% schemata (just (a)–(c) sufﬁce) over the elegance of the proofs
% generated by the schemata. (Note: there may exist a shorter
% proof of Peirce’s law in this system.)

example 4 % Frege style proof of Peirces's formula
    ((forall X\ forall Y\ pv (X ar (Y ar X))) imp
    ((forall X\ forall Y\ forall Z\ pv ((X ar (Y ar Z)) ar ((X ar Y) ar (X ar Z)))) imp
    ((forall X\ pv (((X ar bot) ar bot) ar X)) imp
    ((forall X\ forall Y\ (pv X) imp (pv (X ar Y)) imp (pv Y)) imp
         pv (((v ar w) ar v) ar v)))))
    [aa, bb, cc, mp]
[
  tup (i 1) (pv (((w ar bot) ar bot) ar w)) cc [],
  tup (i 2) (pv ((((w ar bot) ar bot) ar w) ar (bot ar (((w ar bot) ar bot) ar w)))) aa [],
  tup (i 3) (pv (bot ar (((w ar bot) ar bot) ar w))) mp [i 1,i 2],
  tup (i 4) (pv ((bot ar (((w ar bot) ar bot) ar w)) ar ((bot ar ((w ar bot) ar bot)) ar (bot ar w)))) bb [],
  tup (i 5) (pv ((bot ar ((w ar bot) ar bot)) ar (bot ar w))) mp [i 3,i 4],
  tup (i 6) (pv (bot ar ((w ar bot) ar bot))) aa [],
  tup (i 7) (pv (bot ar w)) mp [i 6,i 5],
  tup (i 8) (pv ((bot ar w) ar (v ar (bot ar w)))) aa [],
  tup (i 9) (pv (v ar (bot ar w))) mp [i 7,i 8],
  tup (i 10) (pv ((v ar (bot ar w)) ar ((v ar bot) ar (v ar w)))) bb [],
  tup (i 11) (pv ((v ar bot) ar (v ar w))) mp [i 9,i 10],
  tup (i 12) (pv (((v ar w) ar v) ar ((v ar bot) ar ((v ar w) ar v)))) aa [],
  tup (i 13) (pv (((v ar bot) ar ((v ar w) ar v)) ar (((v ar bot) ar (v ar w)) ar ((v ar bot) ar v)))) bb [],
  tup (i 14) (pv ((((v ar bot) ar ((v ar w) ar v)) ar (((v ar bot) ar (v ar w)) ar ((v ar bot) ar v))) ar (((v ar w) ar v) ar (((v ar bot) ar ((v ar w) ar v)) ar (((v ar bot) ar (v ar w)) ar ((v ar bot) ar v)))))) aa [],
  tup (i 15) (pv (((v ar w) ar v) ar (((v ar bot) ar ((v ar w) ar v)) ar (((v ar bot) ar (v ar w)) ar ((v ar bot) ar v))))) mp [i 13,i 14],
  tup (i 16) (pv ((((v ar w) ar v) ar (((v ar bot) ar ((v ar w) ar v)) ar (((v ar bot) ar (v ar w)) ar ((v ar bot) ar v)))) ar ((((v ar w) ar v) ar ((v ar bot) ar ((v ar w) ar v))) ar (((v ar w) ar v) ar (((v ar bot) ar (v ar w)) ar ((v ar bot) ar v)))))) bb [],
  tup (i 17) (pv ((((v ar w) ar v) ar ((v ar bot) ar ((v ar w) ar v))) ar (((v ar w) ar v) ar (((v ar bot) ar (v ar w)) ar ((v ar bot) ar v))))) mp [i 15,i 16],
  tup (i 18) (pv (((v ar w) ar v) ar (((v ar bot) ar (v ar w)) ar ((v ar bot) ar v)))) mp [i 12,i 17],
  tup (i 19) (pv ((((v ar w) ar v) ar (((v ar bot) ar (v ar w)) ar ((v ar bot) ar v))) ar ((((v ar w) ar v) ar ((v ar bot) ar (v ar w))) ar (((v ar w) ar v) ar ((v ar bot) ar v))))) bb [],
  tup (i 20) (pv ((((v ar w) ar v) ar ((v ar bot) ar (v ar w))) ar (((v ar w) ar v) ar ((v ar bot) ar v)))) mp [i 18,i 19],
  tup (i 21) (pv (((v ar bot) ar (v ar w)) ar (((v ar w) ar v) ar ((v ar bot) ar (v ar w))))) aa [],
  tup (i 22) (pv (((((v ar w) ar v) ar ((v ar bot) ar (v ar w))) ar (((v ar w) ar v) ar ((v ar bot) ar v))) ar (((v ar bot) ar (v ar w)) ar ((((v ar w) ar v) ar ((v ar bot) ar (v ar w))) ar (((v ar w) ar v) ar ((v ar bot) ar v)))))) aa [],
  tup (i 23) (pv (((v ar bot) ar (v ar w)) ar ((((v ar w) ar v) ar ((v ar bot) ar (v ar w))) ar (((v ar w) ar v) ar ((v ar bot) ar v))))) mp [i 20,i 22],
  tup (i 24) (pv ((((v ar bot) ar (v ar w)) ar ((((v ar w) ar v) ar ((v ar bot) ar (v ar w))) ar (((v ar w) ar v) ar ((v ar bot) ar v)))) ar ((((v ar bot) ar (v ar w)) ar (((v ar w) ar v) ar ((v ar bot) ar (v ar w)))) ar (((v ar bot) ar (v ar w)) ar (((v ar w) ar v) ar ((v ar bot) ar v)))))) bb [],
  tup (i 25) (pv ((((v ar bot) ar (v ar w)) ar (((v ar w) ar v) ar ((v ar bot) ar (v ar w)))) ar (((v ar bot) ar (v ar w)) ar (((v ar w) ar v) ar ((v ar bot) ar v))))) mp [i 23,i 24],
  tup (i 26) (pv (((v ar bot) ar (v ar w)) ar (((v ar w) ar v) ar ((v ar bot) ar v)))) mp [i 21,i 25],
  tup (i 27) (pv (((v ar w) ar v) ar ((v ar bot) ar v))) mp [i 11,i 26],
  tup (i 28) (pv ((v ar bot) ar (((v ar bot) ar (v ar bot)) ar (v ar bot)))) aa [],
  tup (i 29) (pv (((v ar bot) ar (((v ar bot) ar (v ar bot)) ar (v ar bot))) ar (((v ar bot) ar ((v ar bot) ar (v ar bot))) ar ((v ar bot) ar (v ar bot))))) bb [],
  tup (i 30) (pv (((v ar bot) ar ((v ar bot) ar (v ar bot))) ar ((v ar bot) ar (v ar bot)))) mp [i 28,i 29],
  tup (i 31) (pv ((v ar bot) ar ((v ar bot) ar (v ar bot)))) aa [],
  tup (i 32) (pv ((v ar bot) ar (v ar bot))) mp [i 31,i 30],
  tup (i 33) (pv (((v ar bot) ar (v ar bot)) ar (((v ar bot) ar v) ar ((v ar bot) ar bot)))) bb [],
  tup (i 34) (pv (((v ar bot) ar v) ar ((v ar bot) ar bot))) mp [i 32,i 33],
  tup (i 35) (pv (((v ar bot) ar bot) ar v)) cc [],
  tup (i 36) (pv ((((v ar bot) ar bot) ar v) ar (((v ar bot) ar v) ar (((v ar bot) ar bot) ar v)))) aa [],
  tup (i 37) (pv (((v ar bot) ar v) ar (((v ar bot) ar bot) ar v))) mp [i 35,i 36],
  tup (i 38) (pv ((((v ar bot) ar v) ar (((v ar bot) ar bot) ar v)) ar ((((v ar bot) ar v) ar ((v ar bot) ar bot)) ar (((v ar bot) ar v) ar v)))) bb [],
  tup (i 39) (pv ((((v ar bot) ar v) ar ((v ar bot) ar bot)) ar (((v ar bot) ar v) ar v))) mp [i 37,i 38],
  tup (i 40) (pv (((v ar bot) ar v) ar v)) mp [i 34,i 39],
%  tup (i 40) (pv W) mp [i 34,i 39],
  tup (i 41) (pv ((((v ar bot) ar v) ar v) ar (((v ar w) ar v) ar (((v ar bot) ar v) ar v)))) aa [],
  tup (i 42) (pv (((v ar w) ar v) ar (((v ar bot) ar v) ar v))) mp [i 40,i 41],
  tup (i 43) (pv ((((v ar w) ar v) ar (((v ar bot) ar v) ar v)) ar ((((v ar w) ar v) ar ((v ar bot) ar v)) ar (((v ar w) ar v) ar v)))) bb [],
  tup (i 44) (pv ((((v ar w) ar v) ar ((v ar bot) ar v)) ar (((v ar w) ar v) ar v))) mp [i 42,i 43],
  tup (i 45) (pv (((v ar w) ar v) ar v)) mp [i 27,i 44]
].

example 5 
  ((adj a b) imp
   (adj b a) imp
   (adj a c) imp
   (adj c d) imp
   (forall x\forall y\ (adj x y) imp (path x y)) imp
   (forall x\forall y\forall z\ (path x y) imp (path y z) imp (path x z)) imp
   (path a d))
/* jhcindex */
  [i 1, i 2, i 3, i 4, i 5, i 6] 
/* end */
/* jhcex */
  [  tup (i  7) (path a b) (i 5) [i 1],
     tup (i  8) (path b a) (i 5) [i 2],
     tup (i  9) (path a a) (i 6) [i 7, i 8],
     tup (i 10) (path a c) (i 5) [i 3],
     tup (i 11) (path a c) (i 6) [i 9, i 10],
     tup (i 12) (path c d) (i 5) [i 4],
     tup (i 13) (path a d) (i 6) [i 11, i 12]  ].
/* end */

/*

 1. (X ar (Y ar X)))
 2. ((X ar (Y ar Z)) ar ((X ar Y) ar (X ar Z)))
 3. (((X ar bot) ar bot) ar X)
 4. Modus ponens
 5. (((w ar bot) ar bot) ar w)    from 3
 6. ((((w ar bot) ar bot) ar w) ar (bot ar (((w ar bot) ar bot) ar w)))      from 1
 7. (bot ar (((w ar bot) ar bot) ar w))       from mp 5,6
 8. ((bot ar (((w ar bot) ar bot) ar w)) ar ((bot ar ((w ar bot) ar bot)) ar (bot ar w)))    from 2
 9. ((bot ar ((w ar bot) ar bot)) ar (bot ar w))
10. (bot ar ((w ar bot) ar bot))
11. (bot ar w)

*/

example 6 % Frege style proof - truncated version of earlier example
/* axioms */
    ((forall X\ forall Y\ (pv X) imp (pv (X ar Y)) imp (pv Y)) imp
    ((forall X\ forall Y\ pv (X ar (Y ar X))) imp
    ((forall X\ forall Y\ forall Z\ pv ((X ar (Y ar Z)) ar 
                                       ((X ar Y) ar (X ar Z)))) imp
    ((forall X\ pv (((X ar bot) ar bot) ar X)) imp
         pv (bot ar w)))))
/* end */

    [i 0, i 1, i 2, i 3]
/* proof */
[ tup (i 4) (pv (((w ar bot) ar bot) ar w)) (i 3) [],
  tup (i 5) (pv ((((w ar bot) ar bot) ar w) ar 
                 (bot ar (((w ar bot) ar bot) ar w)))) (i 1) [],
  tup (i 6) (pv (bot ar (((w ar bot) ar bot) ar w))) (i 0) [i 4,i 5],
  tup (i 7) (pv ((bot ar (((w ar bot) ar bot) ar w)) ar 
                 ((bot ar ((w ar bot) ar bot)) ar (bot ar w))))
                 (i 2) [],
  tup (i 8) (pv ((bot ar ((w ar bot) ar bot)) ar (bot ar w)))
            (i 0) [i 6,i 7],
  tup (i 9) (pv (bot ar ((w ar bot) ar bot))) (i 1) [],
  tup (i 10) (pv (bot ar w)) (i 0) [i 9,i 8] ].
/* end */

/*

 Modus ponens
 1. (X ar (Y ar X))
 2. ((X ar (Y ar Z)) ar ((X ar Y) ar (X ar Z)))
 3. (((X ar bot) ar bot) ar X)

 4. (((w ar bot) ar bot) ar w) (i 3) 
 5. ((((w ar bot) ar bot) ar w) ar (bot ar (((w ar bot) ar bot) ar w))) (i 1) 
 6. (bot ar (((w ar bot) ar bot) ar w)) (i 0) [i 4,i 5],
 7. ((bot ar (((w ar bot) ar bot) ar w)) ar ((bot ar ((w ar bot) ar bot)) ar (bot ar w))) (i 2) 
 8. ((bot ar ((w ar bot) ar bot)) ar (bot ar w)) (i 0) [i 6,i 7],
 9. (bot ar ((w ar bot) ar bot)) (i 1) 
10. (bot ar w) (i 0) [i 9,i 8]

*/
